1. Настроить статическую конфигурацию (без DHCP) в Ubuntu через ip и netplan. 
Настроить IP, маршрут по умолчанию и DNS-сервера (1.1.1.1 и 8.8.8.8). Проверить
работоспособность сети.

Выполняем команду:
sudo nano /etc/netplan/networkmanager.yaml

Добавляем следующую конфигурацию:
network:
 version: 2
 renderer: networkd
 ethernets:
  eth0:
 	dhcp4: no
 	addresses: [192.168.1.100/24]
 	gateway4: 192.168.1.1
 	nameservers:
 		addresses: [1.1.1.1, 8.8.8.8]

Применяем новую конфигурацию сети
sudo netplan apply


2. Настроить правила iptables для доступности сервисов на TCP-портах 22, 80 и
443. Также сервер должен иметь возможность устанавливать подключения к
серверу обновлений. Остальные подключения запретить.

Создаем правило для разрешения подключений к портам 22, 80 и 443:
sudo iptables -A INPUT -p tcp -m multiport --dports 22,80,443 -j ACCEPT

Создаем правило для разрешения подключений к серверу обновлений:
sudo iptables -A OUTPUT -p tcp --dport 80 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT

Запрещаем все остальные входящие подключения:
sudo iptables -A INPUT -j DROP

Сохраняем правила iptables, чтобы они были активны после перезагрузки:
sudo iptables-save | sudo tee /etc/iptables/rules.v4

Устанавливаем автозапуск правил:
sudo systemctl enable netfilter-persistent


3. Запретить любой входящий трафик с IP 3.4.5.6.

sudo iptables -A INPUT -s 3.4.5.6 -j DROP
sudo iptables-save | sudo tee /etc/iptables/rules.v4


4. * Запросы на порт 8090 перенаправлять на порт 80 (на этом же сервере).

sudo iptables -t nat -A PREROUTING -p tcp --dport 8090 -j DNAT --to-destination :80
sudo iptables-save | sudo tee /etc/iptables/rules.v4


5. * Разрешить подключение по SSH только из сети 192.168.0.0/24.

sudo iptables -A INPUT -p tcp --dport 22 -s 192.168.0.0/24 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 22 -j DROP
sudo iptables-save | sudo tee /etc/iptables/rules.v4